{"version":3,"sources":["constants/data.js","components/TodoList.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["INITIAL_TODO_LIST","id","title","isCompleted","INITIAL_TODO_LIST_COUNT","length","TodoList","useState","todos","setTodos","addInputValue","setAddInputValue","React","uniqueId","setUniqueId","className","type","value","placeholder","onChange","event","target","onKeyDown","key","nextUniqueId","map","todo","onClick","targetId","targetTitle","window","confirm","newTodos","filter","handleRemoveTask","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAQaA,EAAoB,CAC/B,CACEC,GAAI,EACJC,MAAO,QACPC,aAAa,GAEf,CACEF,GAAI,EACJC,MAAO,QACPC,aAAa,IAOJC,EAA0BJ,EAAkBK,O,OCZ5CC,EAAW,WAGtB,MAA0BC,mBAASP,GAAnC,mBAAOQ,EAAP,KAAcC,EAAd,KAEA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAEA,EAAgCC,IAAML,SAASH,GAA/C,mBAAOS,EAAP,KAAiBC,EAAjB,KAkEA,OACE,sBAAKC,UAAU,UAAf,UACE,2CAEA,0BAASA,UAAU,cAAnB,UACE,0CAGA,8BACE,uBACEC,KAAK,OACLC,MAAOP,EACPQ,YAAY,WACZC,SAxEwB,SAACC,GACjCT,EAAiBS,EAAMC,OAAOJ,QAwEtBK,UAjEY,SAACF,GAErB,GAAkB,UAAdA,EAAMG,KAAqC,KAAlBb,EAAsB,CACjD,IAAMc,EAAeX,EAAW,EAgBhCJ,EAAS,GAAD,mBACHD,GADG,CAEN,CACEP,GAAIuB,EACJtB,MAAOQ,MAIXI,EAAYU,GAEZb,EAAiB,aAwCjB,yBAASI,UAAU,cAAnB,SACE,oBAAIA,UAAU,WAAd,SACGP,EAAMiB,KAAI,SAACC,GAAD,OACT,qBAAIX,UAAU,OAAd,UACE,sBAAMA,UAAU,YAAhB,SAA6BW,EAAKxB,QAClC,mBACEa,UAAU,mBACVY,QAAS,kBAtCE,SAACC,EAAUC,GAClC,GAAIC,OAAOC,QAAP,gBAAmBF,EAAnB,qEAAiD,CAGnD,IAAMG,EAAWxB,EAAMyB,QAAO,SAACP,GAAD,OAAUA,EAAKzB,KAAO2B,KAKpDnB,EAASuB,IA6BgBE,CAAiBR,EAAKzB,GAAIyB,EAAKxB,YAJxBwB,EAAKzB,eCvG9BkC,EAAM,WACjB,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9439fa72.chunk.js","sourcesContent":["/**\n * data\n * @package constants\n */\n\n/**\n * Todoリスト初期値\n */\nexport const INITIAL_TODO_LIST = [\n  {\n    id: 1,\n    title: \"Task1\",\n    isCompleted: false,\n  },\n  {\n    id: 2,\n    title: \"Task2\",\n    isCompleted: false,\n  },\n];\n\n/**\n * Todoリスト数の初期値\n */\nexport const INITIAL_TODO_LIST_COUNT = INITIAL_TODO_LIST.length;\n","/**\n * TodoList\n * @package components\n */\nimport React, { useState } from \"react\";\n/* constants */\nimport { INITIAL_TODO_LIST, INITIAL_TODO_LIST_COUNT } from \"../constants/data\";\n\n/**\n * TodoList\n * @returns\n */\nexport const TodoList = () => {\n  /* state */\n  /* todo list */\n  const [todos, setTodos] = useState(INITIAL_TODO_LIST);\n  /* add input title */\n  const [addInputValue, setAddInputValue] = useState(\"\");\n  /* todo 採番ID */\n  const [uniqueId, setUniqueId] = React.useState(INITIAL_TODO_LIST_COUNT);\n\n  /* actions */\n  /**\n   * addInputValueの変更処理\n   * @param {*} event\n   */\n  const handleChangeAddInputValue = (event) => {\n    setAddInputValue(event.target.value);\n  };\n\n  /**\n   * タスク追加処理\n   * @param {*} event\n   */\n  const handleAddTodo = (event) => {\n    //  エンターキーが押された時にTodoを追加する\n    if (event.key === \"Enter\" && addInputValue !== \"\") {\n      const nextUniqueId = uniqueId + 1;\n      // Todo追加処理\n      // 元の配列を破壊しないように配列のコピーを作成して、その値でstateを更新する\n      // pushでの配列追加は元の配列の値を変更するのでエラーになる\n\n      // concatの処理\n      // setTodos(\n      //   // concatとpushの違い\n      //   // https://kskpblog.com/javascript-array-add/\n      //   todos.concat({\n      //     id: nextUniqueId,\n      //     title: addInputValue,\n      //   })\n      // );\n\n      // スプレッド構文の処理\n      setTodos([\n        ...todos,\n        {\n          id: nextUniqueId,\n          title: addInputValue,\n        },\n      ]);\n      // 採番IDを更新\n      setUniqueId(nextUniqueId);\n      // todo追加後、入力値をリセット\n      setAddInputValue(\"\");\n    }\n  };\n\n  /**\n   * タスク削除処理\n   * @param {*} targetId\n   * @param {*} targetTitle\n   */\n  const handleRemoveTask = (targetId, targetTitle) => {\n    if (window.confirm(`「${targetTitle}」のtodoを削除しますか？`)) {\n      // 削除するid以外のtodoリストを再編集\n      // filterを用いた方法\n      const newTodos = todos.filter((todo) => todo.id !== targetId);\n      // 削除するTodoの配列番号を取り出してspliceで削除する方法もある\n      // const newTodos = [...todoList];\n      // const deleteIndex = newTodos.findIndex((todo) => todo.id === targetId);\n      // newTodos.splice(deleteIndex, 1);\n      setTodos(newTodos);\n    }\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <h1>Todo List</h1>\n\n      <section className=\"common-area\">\n        <h2>ADD TASK</h2>\n        {/* formタグでsubmitはおすすめされない */}\n        {/* https://document.intra-mart.jp/library/iap/public/im_ui/im_design_guideline_pc/texts/contents_area/submit.html */}\n        <div>\n          <input\n            type=\"text\"\n            value={addInputValue}\n            placeholder=\"New Task\"\n            onChange={handleChangeAddInputValue}\n            onKeyDown={handleAddTodo}\n          />\n        </div>\n      </section>\n      <section className=\"common-area\">\n        <ul className=\"todolist\">\n          {todos.map((todo) => (\n            <li className=\"todo\" key={todo.id}>\n              <span className=\"todo-task\">{todo.title}</span>\n              <i\n                className=\"far fa-trash-alt\"\n                onClick={() => handleRemoveTask(todo.id, todo.title)}\n              ></i>\n            </li>\n          ))}\n        </ul>\n      </section>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { TodoList } from \"./components/TodoList\";\n\nexport const App = () => {\n  return <TodoList />;\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}